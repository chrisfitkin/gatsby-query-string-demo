{"version":3,"sources":["webpack:///./src/components/customQueryStringComponent.js","webpack:///./src/pages/simple.js","webpack:///./src/components/withLocation.js","webpack:///./node_modules/query-string/index.js","webpack:///./node_modules/strict-uri-encode/index.js","webpack:///./node_modules/decode-uri-component/index.js","webpack:///./node_modules/split-on-first/index.js"],"names":["CustomQueryStringComponent","_ref","custom","search","react_default","a","createElement","propTypes","PropTypes","object","withLocation","__webpack_exports__","style","padding","customQueryStringComponent","ComponentToWrap","props","react__WEBPACK_IMPORTED_MODULE_2___default","_reach_router__WEBPACK_IMPORTED_MODULE_3__","location","navigate","Object","assign","queryString","parse","strictUriEncode","__webpack_require__","decodeComponent","splitOnFirst","encode","value","options","strict","encodeURIComponent","decode","extract","input","queryStart","indexOf","slice","formatter","result","arrayFormat","key","accumulator","exec","replace","undefined","concat","newValue","split","parserForArrayFormat","ret","create","trim","param","keys","sort","reduce","Boolean","Array","isArray","keysSorter","b","Number","map","exports","stringify","index","length","join","encoderForArrayFormat","filter","x","parseUrl","hashStart","url","query","module","str","charCodeAt","toString","toUpperCase","singleMatcher","RegExp","multiMatcher","decodeComponents","components","decodeURIComponent","err","left","right","prototype","call","tokens","match","i","encodedURI","TypeError","replaceMap","%FE%FF","%FF%FE","entries","customDecodeURIComponent","string","separator","separatorIndex"],"mappings":"sJAMMA,EAA6B,SAAAC,GAAgB,IACzCC,EADyCD,EAAbE,OAC5BD,OACR,OAAOE,EAAAC,EAAAC,cAAA,0BAAkBJ,IAG3BF,EAA2BO,UAAY,CACrCJ,OAAQK,IAAUC,QAGLC,kBAAaV,GCZbW,EAAA,0BACbP,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEC,QAAS,KACrBT,EAAAC,EAAAC,cAACQ,EAAD,oGCcWJ,IAbM,SAAAK,GAAe,OAAI,SAAAC,GAAK,OAC3CC,EAAAZ,EAAAC,cAACY,EAAA,SAAD,KACG,SAAAjB,GAAA,IAAGkB,EAAHlB,EAAGkB,SAAUC,EAAbnB,EAAamB,SAAb,OACCH,EAAAZ,EAAAC,cAACS,EAADM,OAAAC,OAAA,GACMN,EADN,CAEEG,SAAUA,EACVC,SAAUA,EACVjB,OAAQgB,EAAShB,OAASoB,IAAYC,MAAML,EAAShB,QAAU,4CCZvE,MAAAsB,EAAwBC,EAAQ,KAChCC,EAAwBD,EAAQ,KAChCE,EAAqBF,EAAQ,KAyH7B,SAAAG,EAAAC,EAAAC,GACA,OAAAA,EAAAF,OACAE,EAAAC,OAAAP,EAAAK,GAAAG,mBAAAH,GAGAA,EAGA,SAAAI,EAAAJ,EAAAC,GACA,OAAAA,EAAAG,OACAP,EAAAG,GAGAA,EAiBA,SAAAK,EAAAC,GACA,MAAAC,EAAAD,EAAAE,QAAA,KACA,WAAAD,EACA,GAGAD,EAAAG,MAAAF,EAAA,GAGA,SAAAb,EAAAY,EAAAL,GAMA,MAAAS,EAxGA,SAAAT,GACA,IAAAU,EAEA,OAAAV,EAAAW,aACA,YACA,OAAAC,EAAAb,EAAAc,KACAH,EAAA,aAAAI,KAAAF,GAEAA,IAAAG,QAAA,eAEAL,QAKAM,IAAAH,EAAAD,KACAC,EAAAD,GAAA,IAGAC,EAAAD,GAAAF,EAAA,IAAAX,GARAc,EAAAD,GAAAb,GAWA,cACA,OAAAa,EAAAb,EAAAc,KACAH,EAAA,UAAAI,KAAAF,GACAA,IAAAG,QAAA,YAEAL,OAKAM,IAAAH,EAAAD,GAKAC,EAAAD,GAAA,GAAAK,OAAAJ,EAAAD,GAAAb,GAJAc,EAAAD,GAAA,CAAAb,GALAc,EAAAD,GAAAb,GAYA,YACA,OAAAa,EAAAb,EAAAc,KACA,MACAK,EADA,iBAAAnB,KAAAoB,MAAA,IAAAZ,QAAA,QACAR,EAAAoB,MAAA,KAAApB,EACAc,EAAAD,GAAAM,GAGA,QACA,OAAAN,EAAAb,EAAAc,UACAG,IAAAH,EAAAD,GAKAC,EAAAD,GAAA,GAAAK,OAAAJ,EAAAD,GAAAb,GAJAc,EAAAD,GAAAb,IAsDAqB,CALApB,EAAAV,OAAAC,OAAA,CACAY,QAAA,EACAQ,YAAA,QACEX,IAKFqB,EAAA/B,OAAAgC,OAAA,MAEA,oBAAAjB,EACA,OAAAgB,EAKA,KAFAhB,IAAAkB,OAAAR,QAAA,cAGA,OAAAM,EAGA,UAAAG,KAAAnB,EAAAc,MAAA,MACA,IAAAP,EAAAb,GAAAF,EAAA2B,EAAAT,QAAA,gBAIAhB,OAAAiB,IAAAjB,EAAA,KAAAI,EAAAJ,EAAAC,GAEAS,EAAAN,EAAAS,EAAAZ,GAAAD,EAAAsB,GAGA,OAAA/B,OAAAmC,KAAAJ,GAAAK,OAAAC,OAAA,CAAAjB,EAAAE,KACA,MAAAb,EAAAsB,EAAAT,GAQA,OAPAgB,QAAA7B,IAAA,iBAAAA,IAAA8B,MAAAC,QAAA/B,GAEAW,EAAAE,GA1DA,SAAAmB,EAAA1B,GACA,OAAAwB,MAAAC,QAAAzB,GACAA,EAAAqB,OAGA,iBAAArB,EACA0B,EAAAzC,OAAAmC,KAAApB,IACAqB,KAAA,CAAApD,EAAA0D,IAAAC,OAAA3D,GAAA2D,OAAAD,IACAE,IAAAtB,GAAAP,EAAAO,IAGAP,EA+CA0B,CAAAhC,GAEAW,EAAAE,GAAAb,EAGAW,GACEpB,OAAAgC,OAAA,OAGFa,EAAA/B,UACA+B,EAAA1C,QAEA0C,EAAAC,UAAA,EAAA1D,EAAAsB,KACA,IAAAtB,EACA,SASA,MAAA+B,EAxNA,SAAAT,GACA,OAAAA,EAAAW,aACA,YACA,OAAAC,GAAA,CAAAF,EAAAX,KACA,MAAAsC,EAAA3B,EAAA4B,OACA,YAAAtB,IAAAjB,EACAW,EAGA,OAAAX,EACA,IAAAW,EAAA,CAAAZ,EAAAc,EAAAZ,GAAA,IAAAqC,EAAA,KAAAE,KAAA,KAGA,IACA7B,EACA,CAAAZ,EAAAc,EAAAZ,GAAA,IAAAF,EAAAuC,EAAArC,GAAA,KAAAF,EAAAC,EAAAC,IAAAuC,KAAA,MAIA,cACA,OAAA3B,GAAA,CAAAF,EAAAX,SACAiB,IAAAjB,EACAW,EAGA,OAAAX,EACA,IAAAW,EAAA,CAAAZ,EAAAc,EAAAZ,GAAA,MAAAuC,KAAA,KAGA,IAAA7B,EAAA,CAAAZ,EAAAc,EAAAZ,GAAA,MAAAF,EAAAC,EAAAC,IAAAuC,KAAA,KAGA,YACA,OAAA3B,GAAA,CAAAF,EAAAX,EAAAsC,IACAtC,EAIA,IAAAsC,EACA,EAAAvC,EAAAc,EAAAZ,GAAA,IAAAF,EAAAC,EAAAC,IAAAuC,KAAA,KAGA,EAAA7B,EAAAZ,EAAAC,EAAAC,IAAAuC,KAAA,MAPA7B,EAUA,QACA,OAAAE,GAAA,CAAAF,EAAAX,SACAiB,IAAAjB,EACAW,EAGA,OAAAX,EACA,IAAAW,EAAAZ,EAAAc,EAAAZ,IAGA,IAAAU,EAAA,CAAAZ,EAAAc,EAAAZ,GAAA,IAAAF,EAAAC,EAAAC,IAAAuC,KAAA,MAiKAC,CANAxC,EAAAV,OAAAC,OAAA,CACAO,QAAA,EACAG,QAAA,EACAU,YAAA,QACEX,IAGFyB,EAAAnC,OAAAmC,KAAA/C,GAMA,OAJA,IAAAsB,EAAA0B,MACAD,EAAAC,KAAA1B,EAAA0B,MAGAD,EAAAS,IAAAtB,IACA,MAAAb,EAAArB,EAAAkC,GAEA,YAAAI,IAAAjB,EACA,GAGA,OAAAA,EACAD,EAAAc,EAAAZ,GAGA6B,MAAAC,QAAA/B,GACAA,EACA4B,OAAAlB,EAAAG,GAAA,IACA2B,KAAA,KAGAzC,EAAAc,EAAAZ,GAAA,IAAAF,EAAAC,EAAAC,KACEyC,OAAAC,KAAAJ,OAAA,GAAAC,KAAA,OAGFJ,EAAAQ,SAAA,EAAAtC,EAAAL,KACA,MAAA4C,EAAAvC,EAAAE,QAAA,KAKA,OAJA,IAAAqC,IACAvC,IAAAG,MAAA,EAAAoC,IAGA,CACAC,IAAAxC,EAAAc,MAAA,YACA2B,MAAArD,EAAAW,EAAAC,GAAAL,wCChQA+C,EAAAZ,QAAAa,IAAA9C,mBAAA8C,GAAAjC,QAAA,WAAA2B,OAA6EA,EAAAO,WAAA,GAAAC,SAAA,IAAAC,oDCA7E,IACAC,EAAA,IAAAC,OADA,eACA,MACAC,EAAA,IAAAD,OAAA,wBAEA,SAAAE,EAAAC,EAAArC,GACA,IAEA,OAAAsC,mBAAAD,EAAAjB,KAAA,KACE,MAAAmB,IAIF,OAAAF,EAAAlB,OACA,OAAAkB,EAGArC,KAAA,EAGA,IAAAwC,EAAAH,EAAAhD,MAAA,EAAAW,GACAyC,EAAAJ,EAAAhD,MAAAW,GAEA,OAAAU,MAAAgC,UAAA5C,OAAA6C,KAAA,GAAAP,EAAAI,GAAAJ,EAAAK,IAGA,SAAAzD,EAAAE,GACA,IACA,OAAAoD,mBAAApD,GACE,MAAAqD,GAGF,IAFA,IAAAK,EAAA1D,EAAA2D,MAAAZ,GAEAa,EAAA,EAAiBA,EAAAF,EAAAzB,OAAmB2B,IAGpCF,GAFA1D,EAAAkD,EAAAQ,EAAAE,GAAA1B,KAAA,KAEAyB,MAAAZ,GAGA,OAAA/C,GAyCA0C,EAAAZ,QAAA,SAAA+B,GACA,oBAAAA,EACA,UAAAC,UAAA,6DAAAD,EAAA,KAGA,IAIA,OAHAA,IAAAnD,QAAA,WAGA0C,mBAAAS,GACE,MAAAR,GAEF,OAjDA,SAAArD,GAQA,IANA,IAAA+D,EAAA,CACAC,SAAA,KACAC,SAAA,MAGAN,EAAAV,EAAAxC,KAAAT,GACA2D,GAAA,CACA,IAEAI,EAAAJ,EAAA,IAAAP,mBAAAO,EAAA,IACG,MAAAN,GACH,IAAAhD,EAAAP,EAAA6D,EAAA,IAEAtD,IAAAsD,EAAA,KACAI,EAAAJ,EAAA,IAAAtD,GAIAsD,EAAAV,EAAAxC,KAAAT,GAIA+D,EAAA,WAIA,IAFA,IAAAG,EAAAjF,OAAAmC,KAAA2C,GAEAH,EAAA,EAAgBA,EAAAM,EAAAjC,OAAoB2B,IAAA,CAEpC,IAAArD,EAAA2D,EAAAN,GACA5D,IAAAU,QAAA,IAAAsC,OAAAzC,EAAA,KAAAwD,EAAAxD,IAGA,OAAAP,EAeAmE,CAAAN,uCCzFAnB,EAAAZ,QAAA,EAAAsC,EAAAC,KACA,oBAAAD,GAAA,iBAAAC,EACA,UAAAP,UAAA,iDAGA,QAAAO,EACA,OAAAD,GAGA,MAAAE,EAAAF,EAAAlE,QAAAmE,GAEA,WAAAC,EACA,CAAAF,GAGA,CACAA,EAAAjE,MAAA,EAAAmE,GACAF,EAAAjE,MAAAmE,EAAAD,EAAApC","file":"component---src-pages-simple-js-9f3fe5921a50eed219aa.js","sourcesContent":["// customQueryStringComponent.js\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport withLocation from \"./withLocation\"\n\nconst CustomQueryStringComponent = ({ search }) => {\n  const { custom } = search\n  return <p>Custom Value: {custom}</p>\n}\n\nCustomQueryStringComponent.propTypes = {\n  search: PropTypes.object,\n}\n\nexport default withLocation(CustomQueryStringComponent)\n","import React from \"react\"\nimport CustomQueryStringComponent from \"../components/customQueryStringComponent\"\n\nexport default () => (\n  <div style={{ padding: 10 }}>\n    <CustomQueryStringComponent />\n  </div>\n)\n","// withLocation.js\n\nimport React from \"react\"\nimport { Location } from \"@reach/router\"\nimport queryString from \"query-string\"\n\nconst withLocation = ComponentToWrap => props => (\n  <Location>\n    {({ location, navigate }) => (\n      <ComponentToWrap\n        {...props}\n        location={location}\n        navigate={navigate}\n        search={location.search ? queryString.parse(location.search) : {}}\n      />\n    )}\n  </Location>\n)\n\nexport default withLocation\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\t\treturn key => (result, value, index) => {\n\t\t\t\tif (!value) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (index === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(',')];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.split('').indexOf(',') > -1;\n\t\t\t\tconst newValue = isArray ? value.split(',') : value;\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction extract(input) {\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parse(input, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tarrayFormat: 'none'\n\t}, options);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof input !== 'string') {\n\t\treturn ret;\n\t}\n\n\tinput = input.trim().replace(/^[?#&]/, '');\n\n\tif (!input) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of input.split('&')) {\n\t\tlet [key, value] = splitOnFirst(param.replace(/\\+/g, ' '), '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : decode(value, options);\n\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\treturn Object.keys(ret).sort().reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t}, options);\n\n\tconst formatter = encoderForArrayFormat(options);\n\tconst keys = Object.keys(object);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (input, options) => {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn {\n\t\turl: input.split('?')[0] || '',\n\t\tquery: parse(extract(input), options)\n\t};\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n"],"sourceRoot":""}